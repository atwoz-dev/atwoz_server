spring:
  profiles:
    active: test

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      ssl:
        enabled: false
  servlet:
    multipart:
      max-request-size: 50MB

cloud:
  aws:
    bucket: bucket-name
    credentials:
      access-key: access-key
      secret-key: secret-key
    stack:
      auto: false
    region:
      static: ap-northeast-2

jwt:
  secret: this-is-secret-key-value-at-least-128-bytes
  access-token:
    expiration: 1800  # 30분
  refresh-token:
    expiration: 1209600  # 2주

auth:
  refresh-token-cookie:
    name: refresh_token
    max-age: 2419200 # 4주
    path: /
    same-site: None
    secure: true
    http-only: true

server:
  tomcat:
    max-http-form-post-size: 50MB

payment:
  app-store:
    key-id: "ABC123XYZ"
    issuer-id: "1122334455"
    private-key-string: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ1ZkTDNYNk1aejRHa1Bxc2gKUTNkNHYwd0p4OGFaR20xS3ozS1A5dmF2LzBHaFJBTkNBQVNkcDNxSDJHM2QvSjVhK3hKNHZMbUhaNlFucEFDbApZRjV4VHRQT2wzcVV2OWVrWWNBSTJWenlMUWRURnI4N0Rod3AxaUYyQnZvd3h5MUZzNDhDY0daZAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="
    bundle-id: "com.example.myapp"
    environment: "Sandbox"
    app-apple-id: 0000000000
    root-ca-paths: certs/appstore/AppleRootCA-G2.pem,certs/appstore/AppleRootCA-G3.pem

bizgo:
  api-url: api-url
  client-id: client-id
  client-password: client_password
  from-phone-number: from-phone-number

scheduler:
  cron: "0 0 0 * * *"
